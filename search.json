[{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jamie Reilly. Author, maintainer. Virginia Ulichney. Author. Ben Sacks. Author. Anna Duncan. Contributor. Sarah Weinstein. Contributor. Tania Giovannetti. Contributor. Chelsea Helion. Contributor.","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Reilly J, Ulichney V, Sacks B (2025). ConversationAlign: ConversationAlign. R package version 0.1.0, https://reilly-conceptscognitionlab.github.io/ConversationAlign/.","code":"@Manual{,   title = {ConversationAlign: ConversationAlign},   author = {Jamie Reilly and Virginia Ulichney and Ben Sacks},   year = {2025},   note = {R package version 0.1.0},   url = {https://reilly-conceptscognitionlab.github.io/ConversationAlign/}, }"},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/index.html","id":"conversationalign","dir":"","previous_headings":"","what":"ConversationAlign","title":"ConversationAlign","text":"Open-source software computing main effects indices alignment across coversation partners dyadic conversation transcripts. ConversationAlign analyzes alignment interlocutors (conversation partners) engaged two-person conversations. ConversationAlign works language transcripts. can handle text files (.txt) comma separated value (.csv) spreadsheet style files. ConversationAlign transforms raw language data simultaneous time series objects spanning 30 possible dimensions via embedded lookup database.","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"ConversationAlign","text":"’s schematic ConversationAlign processes conversation transcript. overview ConversationAlign","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/index.html","id":"before","dir":"","previous_headings":"","what":"Before","title":"ConversationAlign","text":"prep language transcripts processing ConversationAlign ConversationAlign can handle home brew preferred format. order columns matter. data transcripts (e.g., metadata, timestamps, grouping variables, physio data) retained. Don’t worry stripping punctuation splitting transscripts across rows. ConversationAlign . Note: ConversationAlign can process dyadic conversation transcripts (.e., two person dialogues) Conditions/Precautions:  1) raw transcript MUST contain least two columns, delineating interlouctor (e.g., Mary Joe) text. 2) Label talker/interlocutor column ‘Interlocutor’, ‘Speaker’, ‘Participant’  3) Label text column ‘Text’, ‘Utterance’, ‘Turn’.  4) Save conversation transcript somwehere computer separate file (CSV txt work best). 5) careful/deliberate filenaming convention. filename conversation become event ID (document_id) dataframe ConversationAlign processes.  6) Move individual conversation transcripts analyzed one folder (e.g., “my_transcripts”). folder ideally nested directory running R script .  7) metadata (e.g., age, timestamps, grouping variables), can either append original transcript merge metdata separate file. useful option many individual difference demographic details.","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"ConversationAlign","text":"Install development version ConversationAlign GitHub using devtools package.","code":"# Check if devtools is installed, if not install it if (!require(\"devtools\", quietly = TRUE)) {   install.packages(\"devtools\") }  # Load devtools library(devtools)  # Check if ConversationAlign is installed, if not install from GitHub if (!require(\"ConversationAlign\", quietly = TRUE)) {   devtools::install_github(\"Reilly-ConceptsCognitionLab/ConversationAlign\") }  # Load SemanticDistance library(ConversationAlign)"},{"path":[]},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/index.html","id":"read_dyads","dir":"","previous_headings":"","what":"read_dyads()","title":"ConversationAlign","text":"read_dyads() read files concatenate single dataframe, appending document IDs. can call dataframe whatever like. read_dyads() default reading csv txt files folder called my_transcripts. Just remember finished processing set transcripts, make sure move folder. can think document folder staging area loading data ConversationAlign.","code":"MyRawLangSamples <- read_dyads() #if you want to specify a different folder, supply your own path MyRawLangSamples <- read_dyads(\"/my_custompath\")"},{"path":[]},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/index.html","id":"clean_dyads","dir":"","previous_headings":"","what":"clean_dyads()","title":"ConversationAlign","text":"clean_dyads() uses numerous regex clean format data just read R previous step. Although many cleaning steps, big ones:  1) lowercase  2) omit stopwords  3) replace contractions (e.g., ‘’re’ ‘’)  4) tick marks apostrophes  5) hypens spaces  6) omits numerals  7) omits/squishes extraneous white space  8) lemmatization ConversationAlign calls textstem package dependency lemmatize language transcript. converts morphologiocal derivatives root forms. default lemmatize=T. Sometimes want retain language output native form. case, change argument clean_dyads lemmatize=F. clean_dyads() outputs word count metrics pre/post cleaning dyad interlocutor. can useful interested whether one person just doesn’t produce many words produces great deal empty utterances.","code":"MyCleanLangSamples <- clean_dyads(MyRawLangSamples) #default is lemmatize=TRUE #If you do NOT want your language sample lemmatized, change the lemmatize argument to F or FALSE MyCleanLangSamples <- clean_dyads(MyRawLangSamples, lemmatize=FALSE)"},{"path":[]},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/index.html","id":"align_dyads","dir":"","previous_headings":"","what":"align_dyads()","title":"ConversationAlign","text":"lot magic happens. align_dyads take cleaned dataframe created last step yoke values every word indexing lookup database. align_dyads() step yokes data word cleaned transcript text structures dataframe speaker (“Participant_ID”), exchange (“exchangecount”), turn (“turncount”) across dyad (“event_id”). prompted select one variables (three) yoke data used later steps compute alignment indices. shown menu wherein can select three variables yoked text. Following menu steps, enter number variable like space separating values (e.g., “10 14 19”). choices dimensions align :  anger, anxiety, boredom, closeness, confusion, dominance, doubt, empathy, encouragement, excitement, guilt, happiness, hope, hostility, politeness, sadness, stress, surprise, trust, valence, age acquisition, word length (letters), morphemes per turn, prevalence (many people know word), number word senses (polysemy), word frequency (lg10), arousal, concreteness, semantic diversity, semantic neighbors. Run align_dyads() cleaned dyads object created using clean_dyads() function.","code":"MyAlignedDyads <- align_dyads(MyCleanLangSamples)"},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/index.html","id":"summarize-transcripts","dir":"","previous_headings":"","what":"Summarize transcripts","title":"ConversationAlign","text":"last step consists three methods, computes seperate index alignment.","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/index.html","id":"summarize_dyads_auc","dir":"","previous_headings":"","what":"summarize_dyads_auc()","title":"ConversationAlign","text":"returns difference time series AUC (dAUC) every variable interest specified. example, summarize_dyads_auc append dAUC values hostility (’s ’re interested ).","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/index.html","id":"summarize_dyads_covar","dir":"","previous_headings":"","what":"summarize_dyads_covar()","title":"ConversationAlign","text":"returns spearman correlation coefficient range lagged Pearson correlation coefficients variable interest. vector Lags/leads Pearson correlations supplied parameter.","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/index.html","id":"summarize_dyads_slope","dir":"","previous_headings":"","what":"summarize_dyads_slope()","title":"ConversationAlign","text":"return intercept slope simple linear regression interlocutor difference time series variable interest. provides measure change time, providing information aligns .","code":"MyFinalDataframe_AUC <- summarize_dyads_auc(MyAlignedDyads, resample = T) #resample=T computes AUC by homogenizing the length of all dyads to the shortest tramscript (number of turns)   MyFinalDataframe_Covar <- summarize_dyads_covar(MyAlignedDyads, lags = c(-2, -1, 1, 2)) # lags are supplied as a vector, defaulting to a range of [-3, 3]  MyFinalDataframe_Slope <- summarize_dyads_slope(MyAlignedDyads, resample = F) # for auc and slope, when resample=F, it becomes much more difficult to compare metrics between conversations of different lengths."},{"path":[]},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/index.html","id":"things-you-must-be-careful-about","dir":"","previous_headings":"","what":"Things you must be careful about","title":"ConversationAlign","text":"analysis language comes assumptions potential bias. example, instances researcher might care morphemes grammatical elements ‘’, ‘’, ‘’, etc.. default ConversationAlign omit stopwords average across open class words (e.g., nouns, verbs) turn interlocutor. specific cases can go wrong. ’s need consider: Stopwords : package omits stopwords. CLICK inspect list. included greetings, idioms, filler words, numerals, pronouns. Lemmatization : package lemmatize language transcripts default. Lemmatization transforms inflected forms (e.g., standing, stands) root dictionary entry (e.g., stand). helps yoking offline values (e.g., happiness, concreteness) word also entails NLP folks refer ‘term aggregation’. However, sometimes might want lemmatize. can easily change option using argument, “lemmatize=FALSE,” clean_dyads function . Sample Size Issue 1: exchange count: program derives correlations AUC dyad metrics alignment. 40 exchanges (80 turns) conversation partners, R value computed 40 data points. conversations less 30 turns, trust R values ConversationAlign outputs. Sample Size Issue 2 : matching lookup database: ConversationAlign works yoking values lookup database word language transcript. variables lots values characterizing many English words. variables (e.g., age acquisition) cover 30k words. word transcript ‘match’ lookup datase, ConversationAlign return NA go average words interlocutor turn. can dangerous many missing values. Beware! Compositionality : ConversationAlign caveman complexity. matches value word word island. Phenomena like polysemy (e.g., bank) modulation one word intensifier (e.g., terrible) handled. problem many affective measures lexical variables like word length. Resampling AUC : summarize_dyads output AUC values quantifying distance interlocutors dimension specify. AUC vary depending length dyad. Therefore, often necessary resample (downsample) dyads equivalent length. get wonky uninterpretable short exchanges.","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/index.html","id":"background","dir":"","previous_headings":"","what":"Background","title":"ConversationAlign","text":"documents describing derived stopword list lookup databases. Preprint  PsyArXiv preprint describing method(s) greater detail referenced : Sacks, B., Ulichney, V., Duncan, ., Helion, C., Weinstein, S., Giovannetti, T., … Reilly, J. (2025, March 12). ConversationAlign: Open-Source Software Analyzing Patterns Lexical Use Alignment Conversation Transcripts. Click read preprint. recently invited revision Behavior Rsearch Methods. update /eventually accepted ! Methods creating internal lookup database  ConversationAlign contains large, internal lexical lookup_database. Click see created merging offline psycholinguistic databases one. Variable Key ConversationAlign  ConversationAlign currently allows users compute alignment dynamics across 30 different lexical, affective, semantic dimensions.Click link variable key. Stopwords  ConversationAlign includes options two different stopword lists, MIT Temple. generated Temple stopword list noticing MIT stopword list contains many open class words really stopwords (least POS tags). Click description Temple stopword list discussion careful decide use MIT stopword list.","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/index.html","id":"get-in-touch","dir":"","previous_headings":"","what":"Get in touch!","title":"ConversationAlign","text":"Contact jamie_reilly@temple.edu feedback assistance.","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/align_dyads.html","id":null,"dir":"Reference","previous_headings":"","what":"align_dyads — align_dyads","title":"align_dyads — align_dyads","text":"Yokes user-specified semantic, affective, phonological values word cleaned language transcript. Values aligned individual word, words present database dropped. number words dropped reported interlocutor dyad. Reports exchange count, counts pair turns.","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/align_dyads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"align_dyads — align_dyads","text":"","code":"align_dyads(clean_ts_df)"},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/align_dyads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"align_dyads — align_dyads","text":"clean_ts_df dataframe cleaned formatted clean_dyads() function","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/align_dyads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"align_dyads — align_dyads","text":"dataframe one-word-per-row format variables interest appended","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/clean_dyads.html","id":null,"dir":"Reference","previous_headings":"","what":"clean_dyads — clean_dyads","title":"clean_dyads — clean_dyads","text":"Cleans formats language transcripts read stage. Removes non-alphabetic characters stopwords. Language transcripts can lemmatized calling lemmatize = TRUE. Vectorizes utterance reports total word count mean word length interlocutor dyad. Also reports number words turn.","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/clean_dyads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clean_dyads — clean_dyads","text":"","code":"clean_dyads(read_ts_df, lemmatize = TRUE, stop_words_df = \"default\")"},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/clean_dyads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"clean_dyads — clean_dyads","text":"read_ts_df data frame produced read_dyads() function lemmatize logical, words lemmatized (switched base morphological form) stop_words_df defaults built list stopwords, otherwise supply file path cvs file column stopwords titles 'Word'","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/clean_dyads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"clean_dyads — clean_dyads","text":"dataframe cleaned text data, formatted one word per row","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/read_dyads.html","id":null,"dir":"Reference","previous_headings":"","what":"read_dyads — read_dyads","title":"read_dyads — read_dyads","text":"Reads pre-formatted dyadic (2 interlocutor) conversation transcripts machine. Transcripts must either csv txt format. supplying txt file, transcript must formatted otter.ai txt file export. options using csv files flexible. ConversationAlign minimally requires csv file two columns, denoting interlocutor text. separate conversation transcript saved separate file. ConversationAlign use file names document ID. Within read dyads function, set folder_name argument directory path local folder containing transcripts machine (e.g., \"my_transcripts\"). Please see github page examples properly formatted transcripts: https://github.com/Reilly-ConceptsCognitionLab/ConversationAlign","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/read_dyads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read_dyads — read_dyads","text":"","code":"read_dyads(folder_name = \"my_transcripts\")"},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/read_dyads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read_dyads — read_dyads","text":"folder_name folder conversation transcripts csv txt format","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/read_dyads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read_dyads — read_dyads","text":"concatenated dataframe language transcript saved separate 'event_id'","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/summarize_dyads.html","id":null,"dir":"Reference","previous_headings":"","what":"summarize_dyads — summarize_dyads","title":"summarize_dyads — summarize_dyads","text":"Calculates appends 3 measures quantifying alignment. Appends mean score dimension turn. Calculates Spearman's rank correlation interlocutor time series appends transcript. Calculates area curve absolute difference time series interlocutor time series. length difference time series can standardized shortest number exchanges present group using internally defined resampling function, called resample = TRUE. Spearman's rank correlation area curve become less reliable dyads 30 exchanges.","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/summarize_dyads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summarize_dyads — summarize_dyads","text":"","code":"summarize_dyads(aligned_ts_df, resample = TRUE)"},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/summarize_dyads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summarize_dyads — summarize_dyads","text":"aligned_ts_df produced align_dyads function resample logical, transcript time series downsampled shortest length corpus","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/summarize_dyads_auc.html","id":null,"dir":"Reference","previous_headings":"","what":"summarize_dyads_auc — summarize_dyads_auc","title":"summarize_dyads_auc — summarize_dyads_auc","text":"Calculates area curve absolute difference time series interlocutor time series. length difference time series can standardized shortest number exchanges present group using internally defined resampling function, called resample = TRUE. Area curve become less reliable dyads 30 exchanges.","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/summarize_dyads_auc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summarize_dyads_auc — summarize_dyads_auc","text":"","code":"summarize_dyads_auc(aligned_ts_df, resample = TRUE)"},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/summarize_dyads_auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summarize_dyads_auc — summarize_dyads_auc","text":"aligned_ts_df data frame produced align_dyads function resample logical, transcript time series downsampled shortest length corpus","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/summarize_dyads_auc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summarize_dyads_auc — summarize_dyads_auc","text":"data frame associating transcript dAUC calculated dimension","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/summarize_dyads_covar.html","id":null,"dir":"Reference","previous_headings":"","what":"summarize_dyads_covar — summarize_dyads_covar","title":"summarize_dyads_covar — summarize_dyads_covar","text":"Calculates Spearman rank correlation lagged Pearson correlation interlocutor time series dimension transcript.","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/summarize_dyads_covar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summarize_dyads_covar — summarize_dyads_covar","text":"","code":"summarize_dyads_covar(aligned_ts_df, lags = c(-3, -2, -1, 0, 1, 2, 3))"},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/summarize_dyads_covar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summarize_dyads_covar — summarize_dyads_covar","text":"aligned_ts_df data frame produced align_dyads function lags vector signed integers specifying lags included Pearson correlation. Negative integers used leads.","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/summarize_dyads_covar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summarize_dyads_covar — summarize_dyads_covar","text":"data frame containing Spearman Pearson correlation transcript. Results organized column data pivoted longer dimension readability.","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/summarize_dyads_slope.html","id":null,"dir":"Reference","previous_headings":"","what":"summarize_dyads_slope — summarize_dyads_slope","title":"summarize_dyads_slope — summarize_dyads_slope","text":"Calculates intercept slope simple linear regression interlocutor difference time series .","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/summarize_dyads_slope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summarize_dyads_slope — summarize_dyads_slope","text":"","code":"summarize_dyads_slope(aligned_ts_df)"},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/summarize_dyads_slope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summarize_dyads_slope — summarize_dyads_slope","text":"aligned_ts_df data frame produced align_dyads function","code":""},{"path":"https://reilly-conceptscognitionlab.github.io/ConversationAlign/reference/summarize_dyads_slope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summarize_dyads_slope — summarize_dyads_slope","text":"data frame containing intercept slope linear regression difference interlocutor time series dimension","code":""}]
